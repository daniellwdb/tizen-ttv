!function(n){"use strict";const e=setInterval((()=>t()),500);async function t(){const t=document.querySelector(".css-175oi2r");t&&clearInterval(e);const i=await fetch("https://gql.twitch.tv/gql",{method:"POST",headers:{"content-type":"application/json","Client-Id":"ue6666qo983tsx6so1t0vnawi233wa"},body:JSON.stringify({query:"\n    query useChannelSubscriptionPolling_SubscriptionQuery(\n      $login: String\n    ) {\n      user(login: $login) {\n        ...useChannelSubscriptionPolling_subscription\n        id\n        __typename\n      }\n    }\n\n    fragment useChannelSubscriptionPolling_subscription on User {\n      login\n      self {\n        subscriptionBenefit {\n          id\n          __typename\n        }\n      }\n    }\n  ",variables:{login:new URL(document.URL).pathname.replace("/","")}})}),{data:o}=await i.json();new MutationObserver((e=>{for(const t of e)t.addedNodes.forEach((async e=>{const t=e.childNodes[0];if(!t)return;const i=t.childNodes[t.childNodes.length-1];if(i instanceof HTMLSpanElement){const e=await n.parseEmotes(i.textContent,void 0,{channelId:o.user.id,providers:{twitch:!0,bttv:!0,ffz:!1,seventv:!0}});i.innerHTML=e.toHTML()}}))})).observe(t,{childList:!0,subtree:!0})}t()}(emotettv);
